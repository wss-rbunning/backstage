/*! For license information please see 09a99b97.8d444543.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[38841],{267087:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=i(785893),o=i(511151);const s={id:"locations",title:"GitHub Locations",sidebar_label:"Locations",description:"Integrating source code stored in GitHub into the Backstage catalog"},r=void 0,a={id:"integrations/github/locations",title:"GitHub Locations",description:"Integrating source code stored in GitHub into the Backstage catalog",source:"@site/../docs/integrations/github/locations.md",sourceDirName:"integrations/github",slug:"/integrations/github/locations",permalink:"/docs/integrations/github/locations",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/integrations/github/locations.md",tags:[],version:"current",frontMatter:{id:"locations",title:"GitHub Locations",sidebar_label:"Locations",description:"Integrating source code stored in GitHub into the Backstage catalog"},sidebar:"docs",previous:{title:"Discovery",permalink:"/docs/integrations/gerrit/discovery"},next:{title:"Discovery",permalink:"/docs/integrations/github/discovery"}},c={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Token scopes",id:"token-scopes",level:3},{value:"Authentication with GitHub Apps",id:"authentication-with-github-apps",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The GitHub integration supports loading catalog entities from github.com or\nGitHub Enterprise. Entities can be added to\n",(0,n.jsx)(t.a,{href:"/docs/features/software-catalog/configuration",children:"static catalog configuration"}),",\nregistered with the\n",(0,n.jsx)(t.a,{href:"https://github.com/backstage/backstage/tree/master/plugins/catalog-import",children:"catalog-import"}),"\nplugin, or ",(0,n.jsx)(t.a,{href:"/docs/integrations/github/discovery",children:"discovered"})," from a GitHub organization. Users and\nGroups can also be ",(0,n.jsx)(t.a,{href:"/docs/integrations/github/org",children:"loaded from an organization"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(t.p,{children:["To use this integration, add configuration to your root ",(0,n.jsx)(t.code,{children:"app-config.yaml"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"integrations:\n  github:\n    - host: github.com\n      token: ${GITHUB_TOKEN}\n    - host: ghe.example.net\n      apiBaseUrl: https://ghe.example.net/api/v3\n      rawBaseUrl: https://ghe.example.net/raw\n      token: ${GHE_TOKEN}\n"})}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"note",children:(0,n.jsxs)(t.p,{children:["A public GitHub provider is added automatically at startup for convenience, so you only need to list it if you want to supply a ",(0,n.jsx)(t.a,{href:"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token",children:"token"}),"."]})}),"\n",(0,n.jsxs)(t.p,{children:["Directly under the ",(0,n.jsx)(t.code,{children:"github"})," key is a list of provider configurations, where you\ncan list the various GitHub-compatible providers you want to be able to fetch\ndata from. Each entry is a structure with up to four elements:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"host"})," (optional): The host of the location target that you want to match on.\nThe default host is ",(0,n.jsx)(t.code,{children:"github.com"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"token"})," (optional): An authentication token as expected by GitHub. If\nsupplied, it will be passed along with all calls to this provider, both API\nand raw. If it is not supplied, anonymous access will be used."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"apiBaseUrl"})," (optional): If you want to communicate using the APIv3 method\nwith this provider, specify the base URL for its endpoint here, with no\ntrailing slash. Specifically when the target is GitHub, you can leave it out\nto be inferred automatically. For a GitHub Enterprise installation, it is\ncommonly at ",(0,n.jsx)(t.code,{children:"https://api.<host>"})," or ",(0,n.jsx)(t.code,{children:"https://<host>/api/v3"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"rawBaseUrl"})," (optional): If you want to communicate using the raw HTTP method\nwith this provider, specify the base URL for its endpoint here, with no\ntrailing slash. Specifically when the target is public GitHub, you can leave\nit out to be inferred automatically. For a GitHub Enterprise installation, it\nis commonly at ",(0,n.jsx)(t.code,{children:"https://<host>/raw"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["You need to supply either ",(0,n.jsx)(t.code,{children:"apiBaseUrl"})," or ",(0,n.jsx)(t.code,{children:"rawBaseUrl"})," or both (except for\npublic GitHub, for which we can infer them). The ",(0,n.jsx)(t.code,{children:"apiBaseUrl"})," will always be\npreferred over the other if a ",(0,n.jsx)(t.code,{children:"token"})," is given, otherwise ",(0,n.jsx)(t.code,{children:"rawBaseUrl"})," will be\npreferred."]}),"\n",(0,n.jsx)(t.h3,{id:"token-scopes",children:"Token scopes"}),"\n",(0,n.jsx)(t.p,{children:"When creating a personal access token on GitHub, you must select scopes to\ndefine the level of access for the token. The scopes required vary depending on\nyour use of the integration:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Reading software components:\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"repo"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Reading organization data:\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"read:org"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"read:user"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"user:email"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Publishing software templates:\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"repo"})}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"workflow"})," (if templates include GitHub workflows)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"authentication-with-github-apps",children:"Authentication with GitHub Apps"}),"\n",(0,n.jsxs)(t.p,{children:["Alternatively for GitHub organizations, Backstage can use GitHub Apps for backend authentication. This\nhas higher rate limits, and a clearer authorization model. See ",(0,n.jsx)(t.a,{href:"/docs/integrations/github/github-apps",children:"github-apps"})," for\nhow to set this up."]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},675251:(e,t,i)=>{var n=i(667294),o=Symbol.for("react.element"),s=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,a=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,i){var n,s={},l=null,d=null;for(n in void 0!==i&&(l=""+i),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(d=t.ref),t)r.call(t,n)&&!c.hasOwnProperty(n)&&(s[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===s[n]&&(s[n]=t[n]);return{$$typeof:o,type:e,key:l,ref:d,props:s,_owner:a.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},785893:(e,t,i)=>{e.exports=i(675251)},511151:(e,t,i)=>{i.d(t,{Z:()=>a,a:()=>r});var n=i(667294);const o={},s=n.createContext(o);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);