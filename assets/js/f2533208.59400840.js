/*! For license information please see f2533208.59400840.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[563557],{402392:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var t=r(785893),o=r(511151);const s={id:"core-app-api.frontendhostdiscovery",title:"FrontendHostDiscovery",description:"API reference for FrontendHostDiscovery"},c=void 0,i={id:"reference/core-app-api.frontendhostdiscovery",title:"FrontendHostDiscovery",description:"API reference for FrontendHostDiscovery",source:"@site/../docs/reference/core-app-api.frontendhostdiscovery.md",sourceDirName:"reference",slug:"/reference/core-app-api.frontendhostdiscovery",permalink:"/docs/reference/core-app-api.frontendhostdiscovery",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/core-app-api.frontendhostdiscovery.md",tags:[],version:"current",frontMatter:{id:"core-app-api.frontendhostdiscovery",title:"FrontendHostDiscovery",description:"API reference for FrontendHostDiscovery"}},d={},a=[{value:"Methods",id:"methods",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/reference/",children:"Home"})," > ",(0,t.jsx)(n.a,{href:"/docs/reference/core-app-api",children:(0,t.jsx)(n.code,{children:"@backstage/core-app-api"})})," > ",(0,t.jsx)(n.a,{href:"/docs/reference/core-app-api.frontendhostdiscovery",children:(0,t.jsx)(n.code,{children:"FrontendHostDiscovery"})})]}),"\n",(0,t.jsx)(n.p,{children:"FrontendHostDiscovery is a config driven DiscoveryApi implementation. It uses the app-config to determine the url for a plugin."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class FrontendHostDiscovery implements DiscoveryApi \n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implements:"})," ",(0,t.jsx)(n.a,{href:"/docs/reference/core-plugin-api.discoveryapi",children:"DiscoveryApi"})]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Method"}),(0,t.jsx)(n.th,{children:"Modifiers"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/reference/core-app-api.frontendhostdiscovery.fromconfig",children:"fromConfig(config, options)"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"static"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)(n.p,{children:["Creates a new FrontendHostDiscovery discovery instance by reading the external target URL from the ",(0,t.jsx)(n.code,{children:"discovery.endpoints"})," config section."]}),(0,t.jsx)(n.p,{children:"eg."})]})]})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"discovery:\n endpoints:\n   - target: https://internal.example.com/internal-catalog\n     plugins: [catalog]\n   - target: https://internal.example.com/secure/api/{{pluginId}}\n     plugins: [auth, permissions]\n   - target:\n       internal: https://internal.example.com/search\n       external: https://example.com/search\n     plugins: [search]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If a plugin is not declared in the config, the discovery will fall back to using the baseUrl with the provided ",(0,t.jsx)(n.code,{children:"pathPattern"})," appended. The default path pattern is ",(0,t.jsx)(n.code,{children:'"/api/{{ pluginId }}"'}),"."]})," |\n|  [getBaseUrl(pluginId)](./core-app-api.frontendhostdiscovery.getbaseurl.md) |  |  |\n"]})}function l(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},675251:(e,n,r)=>{var t=r(667294),o=Symbol.for("react.element"),s=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function a(e,n,r){var t,s={},a=null,p=null;for(t in void 0!==r&&(a=""+r),void 0!==n.key&&(a=""+n.key),void 0!==n.ref&&(p=n.ref),n)c.call(n,t)&&!d.hasOwnProperty(t)&&(s[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===s[t]&&(s[t]=n[t]);return{$$typeof:o,type:e,key:a,ref:p,props:s,_owner:i.current}}n.Fragment=s,n.jsx=a,n.jsxs=a},785893:(e,n,r)=>{e.exports=r(675251)},511151:(e,n,r)=>{r.d(n,{Z:()=>i,a:()=>c});var t=r(667294);const o={},s=t.createContext(o);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);