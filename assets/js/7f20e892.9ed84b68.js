/*! For license information please see 7f20e892.9ed84b68.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[825445],{834871:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=o(785893),n=o(511151);const s={id:"root-health",title:"Root Health Service",sidebar_label:"Root Health",description:"Documentation for the Health service"},c=void 0,a={id:"backend-system/core-services/root-health",title:"Root Health Service",description:"Documentation for the Health service",source:"@site/../docs/backend-system/core-services/root-health.md",sourceDirName:"backend-system/core-services",slug:"/backend-system/core-services/root-health",permalink:"/docs/backend-system/core-services/root-health",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/backend-system/core-services/root-health.md",tags:[],version:"current",frontMatter:{id:"root-health",title:"Root Health Service",sidebar_label:"Root Health",description:"Documentation for the Health service"},sidebar:"docs",previous:{title:"Root Config",permalink:"/docs/backend-system/core-services/root-config"},next:{title:"Root Http Router",permalink:"/docs/backend-system/core-services/root-http-router"}},i={},l=[{value:"Configuring the service",id:"configuring-the-service",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The Root Health service provides some health check endpoints for the backend. By default, the ",(0,r.jsx)(t.code,{children:"rootHttpRouter"})," exposes a ",(0,r.jsx)(t.code,{children:"/.backstage/health/v1/readiness"})," and ",(0,r.jsx)(t.code,{children:"/.backstage/health/v1/liveness"})," endpoints, which return a JSON object with the status of the backend services according the implementation of the Root Health Service."]}),"\n",(0,r.jsx)(t.h2,{id:"configuring-the-service",children:"Configuring the service"}),"\n",(0,r.jsx)(t.p,{children:"The following example shows how you can override the root health service implementation."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { RootHealthService, coreServices } from '@backstage/backend-plugin-api';\n\nconst backend = createBackend();\n\nclass MyRootHealthService implements RootHealthService {\n  async getLiveness() {\n    // provide your own implementation\n    return { status: 200, payload: { status: 'ok' } };\n  }\n\n  async getReadiness() {\n    // provide your own implementation\n    return { status: 200, payload: { status: 'ok' } };\n  }\n}\n\nbackend.add(\n  createServiceFactory({\n    service: coreServices.rootHealth,\n    deps: {},\n    async factory({}) {\n      return new MyRootHealthService();\n    },\n  }),\n);\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},675251:(e,t,o)=>{var r=o(667294),n=Symbol.for("react.element"),s=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,o){var r,s={},l=null,d=null;for(r in void 0!==o&&(l=""+o),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(d=t.ref),t)c.call(t,r)&&!i.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===s[r]&&(s[r]=t[r]);return{$$typeof:n,type:e,key:l,ref:d,props:s,_owner:a.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},785893:(e,t,o)=>{e.exports=o(675251)},511151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>c});var r=o(667294);const n={},s=r.createContext(n);function c(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);