/*! For license information please see dfdc42bf.1978df32.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[437439],{718398:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=i(785893),o=i(511151);const s={id:"aws-lightsail",title:"Deploying Backstage on AWS Lightsail",sidebar_label:"AWS Lightsail",description:"How to deploy Backstage on AWS Lightsail"},r=void 0,l={id:"deployment/backstage-deploy/aws-lightsail",title:"Deploying Backstage on AWS Lightsail",description:"How to deploy Backstage on AWS Lightsail",source:"@site/../docs/deployment/backstage-deploy/aws.md",sourceDirName:"deployment/backstage-deploy",slug:"/deployment/backstage-deploy/aws-lightsail",permalink:"/docs/deployment/backstage-deploy/aws-lightsail",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/deployment/backstage-deploy/aws.md",tags:[],version:"current",frontMatter:{id:"aws-lightsail",title:"Deploying Backstage on AWS Lightsail",sidebar_label:"AWS Lightsail",description:"How to deploy Backstage on AWS Lightsail"},sidebar:"docs",previous:{title:"AWS Fargate via Flightcontrol",permalink:"/docs/deployment/flightcontrol"},next:{title:"Introduction",permalink:"/docs/backend-system/"}},a={},c=[{value:"What is AWS Lightsail",id:"what-is-aws-lightsail",level:2},{value:"Creating user in AWS",id:"creating-user-in-aws",level:2},{value:"Configuring the Pulumi CLI",id:"configuring-the-pulumi-cli",level:2},{value:"Deploying your instance on Lightsail",id:"deploying-your-instance-on-lightsail",level:2},{value:"Cleaning up resources",id:"cleaning-up-resources",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["DISCLAIMER: The ",(0,t.jsx)(n.code,{children:"deploy"})," command is in alpha and still experimental. Do not use the ",(0,t.jsx)(n.code,{children:"deploy"})," command for production deployments."]})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Getting started with Backstage often involves setting up an instance on a cloud provider and sharing it with your team so they can experiment. To make this cloud deployment easier, we've built a ",(0,t.jsx)(n.code,{children:"deploy"})," command to stand up a proof-of-concept instance on AWS (using Lightsail)."]}),"\n",(0,t.jsx)(n.h2,{id:"what-is-aws-lightsail",children:"What is AWS Lightsail"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["AWS offers a free tier for up to three months on $10 USD/month Container service (Micro -1 node). By default we use the ",(0,t.jsx)(n.code,{children:"nano"})," node, so if you are a new user this approach shouldn't cost you anything. For more information, refer to the ",(0,t.jsx)(n.a,{href:"https://aws.amazon.com/lightsail/pricing/",children:"pricing"})," documentation."]})}),"\n",(0,t.jsxs)(n.p,{children:["AWS Lightsail offers a simple way to run containers in the cloud. To learn more about AWS Lightsail, please refer to the ",(0,t.jsx)(n.a,{href:"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-services-deployments",children:"official documentation"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"creating-user-in-aws",children:"Creating user in AWS"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Open the AWS console and navigate to the IAM section"}),"\n",(0,t.jsxs)(n.li,{children:["In the left side menu click on ",(0,t.jsx)(n.code,{children:"Users"})," and then click on ",(0,t.jsx)(n.code,{children:"Add users"})]}),"\n",(0,t.jsxs)(n.li,{children:["Specify a username and then click on ",(0,t.jsx)(n.code,{children:"Next"})]}),"\n",(0,t.jsxs)(n.li,{children:["Afterwards you can assign permissions, select ",(0,t.jsx)(n.code,{children:"Attach policies directly"})," and then click on ",(0,t.jsx)(n.code,{children:"Create policy"}),".\nThis should take you to a new window in which you can create a new policy based on ",(0,t.jsx)(n.code,{children:"JSON"}),".\nCopy over the following:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "VisualEditor0",\n      "Effect": "Allow",\n      "Action": [\n        "ecr:DescribeImageReplicationStatus",\n        "ecr:ListTagsForResource",\n        "ecr:UploadLayerPart",\n        "ecr:BatchGetRepositoryScanningConfiguration",\n        "ecr:DeleteRepository",\n        "ecr:GetRegistryScanningConfiguration",\n        "ecr:CompleteLayerUpload",\n        "ecr:TagResource",\n        "ecr:DescribeRepositories",\n        "ecr:DeleteRepositoryPolicy",\n        "ecr:BatchCheckLayerAvailability",\n        "ecr:GetLifecyclePolicy",\n        "ecr:GetRegistryPolicy",\n        "ecr:PutLifecyclePolicy",\n        "ecr:DescribeImageScanFindings",\n        "ecr:GetLifecyclePolicyPreview",\n        "ecr:CreateRepository",\n        "ecr:DescribeRegistry",\n        "ecr:GetDownloadUrlForLayer",\n        "ecr:GetAuthorizationToken",\n        "ecr:DeleteLifecyclePolicy",\n        "ecr:PutImage",\n        "ecr:UntagResource",\n        "ecr:SetRepositoryPolicy",\n        "ecr:BatchGetImage",\n        "ecr:InitiateLayerUpload",\n        "ecr:GetRepositoryPolicy",\n        "lightsail:CreateContainerService",\n        "lightsail:GetKeyPair",\n        "lightsail:GetContainerServiceDeployments",\n        "lightsail:CreateContainerServiceRegistryLogin",\n        "lightsail:GetContainerImages",\n        "lightsail:UntagResource",\n        "lightsail:RegisterContainerImage",\n        "lightsail:GetContainerServices",\n        "lightsail:GetContainerServicePowers",\n        "lightsail:GetKeyPairs",\n        "lightsail:CreateContainerServiceDeployment",\n        "lightsail:GetContainerServiceMetricData",\n        "lightsail:GetContainerAPIMetadata",\n        "lightsail:DeleteContainerService",\n        "lightsail:GetContainerLog",\n        "lightsail:TagResource"\n      ],\n      "Resource": "*"\n    },\n    {\n      "Sid": "Statement1",\n      "Effect": "Allow",\n      "Action": [],\n      "Resource": []\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Then click on ",(0,t.jsx)(n.code,{children:"Next"})," and give the policy a name and a description of your liking. Afterwards, click on ",(0,t.jsx)(n.code,{children:"Create policy"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Navigate back to the user creation window and press on the refresh button and search for the policy you just created. Now, create the user."}),"\n",(0,t.jsxs)(n.li,{children:["Now you will be redirected to all users, click on the user you just created and click on ",(0,t.jsx)(n.code,{children:"Security credentials"})]}),"\n",(0,t.jsxs)(n.li,{children:["Scroll below and click on ",(0,t.jsx)(n.code,{children:"Create access key"})]}),"\n",(0,t.jsxs)(n.li,{children:["Choose ",(0,t.jsx)(n.code,{children:"Command Line Interface (CLI)"})]}),"\n",(0,t.jsx)(n.li,{children:"Now export the following values"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ export AWS_ACCESS_KEY_ID=... (first value)\n$ export AWS_SECRET_ACCESS_KEY=.... (second secret value)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-the-pulumi-cli",children:"Configuring the Pulumi CLI"}),"\n",(0,t.jsxs)(n.p,{children:["Second, install the ",(0,t.jsx)(n.a,{href:"https://www.pulumi.com/docs/get-started/install/",children:"Pulumi CLI"})," - ",(0,t.jsx)(n.code,{children:"backstage-deploy"}),' uses it to\nsimplify the management of cloud resources (Pulumi allows us to simply specify the desired "target cloud state", and\nPulumi will intelligently create/modify/delete resources to reach that state. Nice!).']}),"\n",(0,t.jsx)(n.p,{children:"Then we need to execute the following commands, to set Pulumi up:"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Make sure to store your passphrase somewhere safe as it is used to encrypt/decrypt your Pulumi config."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ pulumi login --local\n$ export PULUMI_CONFIG_PASSPHRASE="<your-secret>"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["By using ",(0,t.jsx)(n.code,{children:"pulumi login --local"})," we are making sure that Pulumi stores our state on the local file disk. The environment variable ",(0,t.jsx)(n.code,{children:"PULUMI_CONFIG_PASSPHRASE"})," is used by Pulumi to generate a unique key for your stack"]}),"\n",(0,t.jsx)(n.h2,{id:"deploying-your-instance-on-lightsail",children:"Deploying your instance on Lightsail"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Make sure that ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/",children:"Docker"})," is running on your machine before you start this section."]})}),"\n",(0,t.jsx)(n.p,{children:"After you have made your changes to your local instance, it's time to deploy it on Lightsail."}),"\n",(0,t.jsxs)(n.p,{children:["First, we need to configure a new ",(0,t.jsx)(n.code,{children:"app-config"})," file and update the ",(0,t.jsx)(n.code,{children:"baseUrl"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ touch app-config.deployment.yaml\n"})}),"\n",(0,t.jsx)(n.p,{children:"And then update the file with the following yaml:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"app:\n  baseUrl: ${BACKSTAGE_HOST}\n\nbackend:\n  baseUrl: ${BACKSTAGE_HOST}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The environment variable ",(0,t.jsx)(n.code,{children:"BACKSTAGE_HOST"})," will be set to the endpoint that AWS Lightsail creates."]}),"\n",(0,t.jsx)(n.p,{children:"Now we can deploy our instance!"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npx backstage-deploy aws --stack backstage-poc --create-dockerfile\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the first part of the command, we are specifying that we want to deploy our instance on AWS. With the ",(0,t.jsx)(n.a,{href:"https://www.pulumi.com/docs/reference/cli/pulumi_stack/",children:(0,t.jsx)(n.code,{children:"--stack"})})," option, we are providing Pulumi a reference to our container deployment. Furthermore, with the ",(0,t.jsx)(n.code,{children:"--create-dockerfile"})," option, there will be a ",(0,t.jsx)(n.code,{children:"Dockerfile"})," and ",(0,t.jsx)(n.code,{children:".dockerignore"})," created in the root of the project."]}),"\n",(0,t.jsx)(n.p,{children:"After running the command, Pulumi will start creating the following resources for you in AWS:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ECR Repository"}),"\n",(0,t.jsx)(n.li,{children:"Lightsail Container Service"}),"\n",(0,t.jsx)(n.li,{children:"Lightsail Container Service Deployment"}),"\n",(0,t.jsx)(n.li,{children:"Policy that allows Lightsail to pull from ECR"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If it's the first time building the Docker image, it might take a while for everything to be fully provisioned. After the command is finished running, your Backstage instance should be up and running on AWS Lightsail! \ud83c\udf89"}),"\n",(0,t.jsx)(n.h3,{id:"cleaning-up-resources",children:"Cleaning up resources"}),"\n",(0,t.jsx)(n.p,{children:"Cleaning up the resources is also done with the deploy command."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npx backstage-deploy aws --stack backstage-poc --destroy\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will delete everything that was originally created by the ",(0,t.jsx)(n.code,{children:"deploy"})," command."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},675251:(e,n,i)=>{var t=i(667294),o=Symbol.for("react.element"),s=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,l=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,i){var t,s={},c=null,d=null;for(t in void 0!==i&&(c=""+i),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(d=n.ref),n)r.call(n,t)&&!a.hasOwnProperty(t)&&(s[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===s[t]&&(s[t]=n[t]);return{$$typeof:o,type:e,key:c,ref:d,props:s,_owner:l.current}}n.Fragment=s,n.jsx=c,n.jsxs=c},785893:(e,n,i)=>{e.exports=i(675251)},511151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var t=i(667294);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);