/*! For license information please see c13dcd2f.79b17b1c.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[709508],{5456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var r=t(785893),i=t(511151);const s={id:"frontend-plugin-api.createextensionblueprint",title:"createExtensionBlueprint()",description:"API reference for createExtensionBlueprint()"},a=void 0,o={id:"reference/frontend-plugin-api.createextensionblueprint",title:"createExtensionBlueprint()",description:"API reference for createExtensionBlueprint()",source:"@site/../docs/reference/frontend-plugin-api.createextensionblueprint.md",sourceDirName:"reference",slug:"/reference/frontend-plugin-api.createextensionblueprint",permalink:"/docs/reference/frontend-plugin-api.createextensionblueprint",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/frontend-plugin-api.createextensionblueprint.md",tags:[],version:"current",frontMatter:{id:"frontend-plugin-api.createextensionblueprint",title:"createExtensionBlueprint()",description:"API reference for createExtensionBlueprint()"}},c={},p=[{value:"Parameters",id:"parameters",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/reference/",children:"Home"})," > ",(0,r.jsx)(n.a,{href:"/docs/reference/frontend-plugin-api",children:(0,r.jsx)(n.code,{children:"@backstage/frontend-plugin-api"})})," > ",(0,r.jsx)(n.a,{href:"/docs/reference/frontend-plugin-api.createextensionblueprint",children:(0,r.jsx)(n.code,{children:"createExtensionBlueprint"})})]}),"\n",(0,r.jsxs)(n.p,{children:["A simpler replacement for wrapping up ",(0,r.jsx)(n.code,{children:"createExtension"})," inside a kind or type. This allows for a cleaner API for creating types and instances of those types."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function createExtensionBlueprint<TParams extends object, UOutput extends AnyExtensionDataRef, TInputs extends {\n    [inputName in string]: ExtensionInput<AnyExtensionDataRef, {\n        optional: boolean;\n        singleton: boolean;\n    }>;\n}, TConfigSchema extends {\n    [key in string]: (zImpl: typeof z) => z.ZodType;\n}, UFactoryOutput extends ExtensionDataValue<any, any>, TKind extends string, TNamespace extends string | undefined = undefined, TName extends string | undefined = undefined, TDataRefs extends {\n    [name in string]: AnyExtensionDataRef;\n} = never>(options: CreateExtensionBlueprintOptions<TKind, TNamespace, TName, TParams, UOutput, TInputs, TConfigSchema, UFactoryOutput, TDataRefs>): ExtensionBlueprint<{\n    kind: TKind;\n    namespace: TNamespace;\n    name: TName;\n    params: TParams;\n    output: UOutput;\n    inputs: string extends keyof TInputs ? {} : TInputs;\n    config: string extends keyof TConfigSchema ? {} : {\n        [key in keyof TConfigSchema]: z.infer<ReturnType<TConfigSchema[key]>>;\n    };\n    configInput: string extends keyof TConfigSchema ? {} : z.input<z.ZodObject<{\n        [key in keyof TConfigSchema]: ReturnType<TConfigSchema[key]>;\n    }>>;\n    dataRefs: TDataRefs;\n}>;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"options"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.a,{href:"/docs/reference/frontend-plugin-api.createextensionblueprintoptions",children:"CreateExtensionBlueprintOptions"}),"<TKind, TNamespace, TName, TParams, UOutput, TInputs, TConfigSchema, UFactoryOutput, TDataRefs>"]}),(0,r.jsx)(n.td,{})]})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/reference/frontend-plugin-api.extensionblueprint",children:"ExtensionBlueprint"}),"<{ kind: TKind; namespace: TNamespace; name: TName; params: TParams; output: UOutput; inputs: string extends keyof TInputs ? {} : TInputs; config: string extends keyof TConfigSchema ? {} : { [key in keyof TConfigSchema]: z.infer<ReturnType<TConfigSchema[key]>>; }; configInput: string extends keyof TConfigSchema ? {} : z.input<z.ZodObject<{ [key in keyof TConfigSchema]: ReturnType<TConfigSchema[key]>; }>>; dataRefs: TDataRefs; }>"]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},675251:(e,n,t)=>{var r=t(667294),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function p(e,n,t){var r,s={},p=null,d=null;for(r in void 0!==t&&(p=""+t),void 0!==n.key&&(p=""+n.key),void 0!==n.ref&&(d=n.ref),n)a.call(n,r)&&!c.hasOwnProperty(r)&&(s[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===s[r]&&(s[r]=n[r]);return{$$typeof:i,type:e,key:p,ref:d,props:s,_owner:o.current}}n.Fragment=s,n.jsx=p,n.jsxs=p},785893:(e,n,t)=>{e.exports=t(675251)},511151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var r=t(667294);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);