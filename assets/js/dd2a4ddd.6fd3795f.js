/*! For license information please see dd2a4ddd.6fd3795f.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[351005],{932689:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=t(785893),s=t(511151);const a={id:"plugin-catalog-backend.catalogbuilder",title:"CatalogBuilder",description:"API reference for CatalogBuilder"},i=void 0,o={id:"reference/plugin-catalog-backend.catalogbuilder",title:"CatalogBuilder",description:"API reference for CatalogBuilder",source:"@site/../docs/reference/plugin-catalog-backend.catalogbuilder.md",sourceDirName:"reference",slug:"/reference/plugin-catalog-backend.catalogbuilder",permalink:"/docs/reference/plugin-catalog-backend.catalogbuilder",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/plugin-catalog-backend.catalogbuilder.md",tags:[],version:"current",frontMatter:{id:"plugin-catalog-backend.catalogbuilder",title:"CatalogBuilder",description:"API reference for CatalogBuilder"}},l={},d=[{value:"Methods",id:"methods",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/reference/",children:"Home"})," > ",(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend",children:(0,r.jsx)(n.code,{children:"@backstage/plugin-catalog-backend"})})," > ",(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder",children:(0,r.jsx)(n.code,{children:"CatalogBuilder"})})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Warning: This API is now obsolete."}),"\n",(0,r.jsx)(n.p,{children:"Please migrate to the new backend system as this will be removed in the future."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"A builder that helps wire up all of the component parts of the catalog."}),"\n",(0,r.jsx)(n.p,{children:"The touch points where you can replace or extend behavior are as follows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Entity policies can be added or replaced. These are automatically run after the processors' pre-processing steps. All policies are given the chance to inspect the entity, and all of them have to pass in order for the entity to be considered valid from an overall point of view. - Location analyzers can be added. These are responsible for analyzing repositories when onboarding them into the catalog, by finding catalog-info.yaml files and other artifacts that can help automatically register or create catalog data on the user's behalf. - Placeholder resolvers can be replaced or added. These run on the raw structured data between the parsing and pre-processing steps, to replace dollar-prefixed entries with their actual values (like $file). - Field format validators can be replaced. These check the format of individual core fields such as metadata.name, to ensure that they adhere to certain rules. - Processors can be added or replaced. These implement the functionality of reading, parsing, validating, and processing the entity data before it is persisted in the catalog."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"class CatalogBuilder \n"})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Method"}),(0,r.jsx)(n.th,{children:"Modifiers"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.addentitypolicy",children:"addEntityPolicy(policies)"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.p,{children:"Adds policies that are used to validate entities between the pre- processing and post-processing stages. All such policies must pass for the entity to be considered valid."}),(0,r.jsx)(n.p,{children:"If what you want to do is to replace the rules for what format is allowed in various core entity fields (such as metadata.name), you may want to use  instead."})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.addentityprovider",children:"addEntityProvider(providers)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Adds or replaces entity providers. These are responsible for bootstrapping the list of entities out of original data sources. For example, there is one entity source for the config locations, and one for the database stored locations. If you ingest entities out of a third party system, you may want to implement that in terms of an entity provider as well."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.addlocationanalyzers",children:"addLocationAnalyzers(analyzers)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Adds Location Analyzers. These are responsible for analyzing repositories when onboarding them into the catalog, by finding catalog-info.yaml files and other artifacts that can help automatically register or create catalog data on the user's behalf."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.addpermissionrules",children:"addPermissionRules(permissionRules)"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["Adds additional permission rules. Permission rules are used to evaluate catalog resources against queries. See ",(0,r.jsx)(n.a,{href:"/docs/reference/plugin-permission-node.permissionrule",children:"PermissionRule"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.addpermissions",children:"addPermissions(permissions)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Adds additional permissions. See ."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.addprocessor",children:"addProcessor(processors)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Adds entity processors. These are responsible for reading, parsing, and processing entities before they are persisted in the catalog."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.build",children:"build()"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Wires up and returns all of the component parts of the catalog"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.create",children:"create(env)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"static"})}),(0,r.jsx)(n.td,{children:"Creates a catalog builder."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.getdefaultprocessors",children:"getDefaultProcessors()"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.p,{children:"Returns the default list of entity processors. These are responsible for reading, parsing, and processing entities before they are persisted in the catalog. Changing the order of processing can give more control to custom processors."}),(0,r.jsx)(n.p,{children:"Consider using with "})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.replaceentitypolicies",children:"replaceEntityPolicies(policies)"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.p,{children:"Sets what policies to use for validation of entities between the pre- processing and post-processing stages. All such policies must pass for the entity to be considered valid."}),(0,r.jsx)(n.p,{children:"If what you want to do is to replace the rules for what format is allowed in various core entity fields (such as metadata.name), you may want to use  instead."}),(0,r.jsx)(n.p,{children:"This function replaces the default set of policies; use with care."})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.replaceprocessors",children:"replaceProcessors(processors)"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.p,{children:"Sets what entity processors to use. These are responsible for reading, parsing, and processing entities before they are persisted in the catalog."}),(0,r.jsx)(n.p,{children:"This function replaces the default set of processors, consider using with ; use with care."})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setallowedlocationtypes",children:"setAllowedLocationTypes(allowedLocationTypes)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Sets up the allowed location types from being registered via the location service."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setentitydataparser",children:"setEntityDataParser(parser)"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.p,{children:"Sets up the catalog to use a custom parser for entity data."}),(0,r.jsx)(n.p,{children:"This is the function that gets called immediately after some raw entity specification data has been read from a remote source, and needs to be parsed and emitted as structured data."})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.seteventbroker",children:"setEventBroker(broker)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Enables the publishing of events for conflicts in the DefaultProcessingDatabase"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setfieldformatvalidators",children:"setFieldFormatValidators(validators)"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.p,{children:"Sets the validator function to use for one or more special fields of an entity. This is useful if the default rules for formatting of fields are not sufficient."}),(0,r.jsx)(n.p,{children:"This function has no effect if used together with ."})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setlocationanalyzer",children:"setLocationAnalyzer(locationAnalyzer)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Overwrites the default location analyzer."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setplaceholderresolver",children:"setPlaceholderResolver(key, resolver)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Adds, or overwrites, a handler for placeholders (e.g. $file) in entity definition files."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setprocessinginterval",children:"setProcessingInterval(processingInterval)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Overwrites the default processing interval function used to spread entity updates in the catalog."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.setprocessingintervalseconds",children:"setProcessingIntervalSeconds(seconds)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Processing interval determines how often entities should be processed. Seconds provided will be multiplied by 1.5 The default processing interval is 100-150 seconds. setting this too low will potentially deplete request quotas to upstream services."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.subscribe",children:"subscribe(options)"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/reference/plugin-catalog-backend.catalogbuilder.uselegacysingleprocessorvalidation",children:"useLegacySingleProcessorValidation()"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Enables the legacy behaviour of canceling validation early whenever only a single processor declares an entity kind to be valid."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},675251:(e,n,t)=>{var r=t(667294),s=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,t){var r,a={},d=null,c=null;for(r in void 0!==t&&(d=""+t),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(c=n.ref),n)i.call(n,r)&&!l.hasOwnProperty(r)&&(a[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===a[r]&&(a[r]=n[r]);return{$$typeof:s,type:e,key:d,ref:c,props:a,_owner:o.current}}n.Fragment=a,n.jsx=d,n.jsxs=d},785893:(e,n,t)=>{e.exports=t(675251)},511151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var r=t(667294);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);