/*! For license information please see 23c07558.987c5ba8.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[354118],{373257:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var n=t(785893),i=t(511151);const o={id:"plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions",title:"GithubMultiOrgEntityProviderOptions",description:"API reference for GithubMultiOrgEntityProviderOptions"},s=void 0,d={id:"reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions",title:"GithubMultiOrgEntityProviderOptions",description:"API reference for GithubMultiOrgEntityProviderOptions",source:"@site/../docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.md",sourceDirName:"reference",slug:"/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions",permalink:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.md",tags:[],version:"current",frontMatter:{id:"plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions",title:"GithubMultiOrgEntityProviderOptions",description:"API reference for GithubMultiOrgEntityProviderOptions"}},l={},c=[{value:"Properties",id:"properties",level:2}];function a(e){const r={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/docs/reference/",children:"Home"})," > ",(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github",children:(0,n.jsx)(r.code,{children:"@backstage/plugin-catalog-backend-module-github"})})," > ",(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions",children:(0,n.jsx)(r.code,{children:"GithubMultiOrgEntityProviderOptions"})})]}),"\n",(0,n.jsxs)(r.p,{children:["Options for ",(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovider",children:"GithubMultiOrgEntityProvider"}),"."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"Signature:"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"export interface GithubMultiOrgEntityProviderOptions \n"})}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Property"}),(0,n.jsx)(r.th,{children:"Modifiers"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.alwaysusedefaultnamespace",children:"alwaysUseDefaultNamespace?"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"boolean"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," Use the default namespace for groups. By default, groups will be namespaced according to their GitHub org."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.events",children:"events?"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-events-node.eventsservice",children:"EventsService"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," Passing the optional EventsService enables event-based delta updates."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.githubcredentialsprovider",children:"githubCredentialsProvider?"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/integration.githubcredentialsprovider",children:"GithubCredentialsProvider"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," Optionally supply a custom credentials provider, replacing the default one."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.githuburl",children:"githubUrl"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"string"}),(0,n.jsx)(r.td,{children:"The target that this provider should consume."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.id",children:"id"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"string"}),(0,n.jsx)(r.td,{children:"A unique, stable identifier for this provider."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.logger",children:"logger"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/backend-plugin-api.loggerservice",children:"LoggerService"})}),(0,n.jsx)(r.td,{children:"The logger to use."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.orgs",children:"orgs?"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:"string[]"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," The list of the GitHub orgs to consume. By default, it will consume all accessible orgs on the given GitHub instance (support for GitHub App integration only)."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.schedule",children:"schedule?"})}),(0,n.jsx)(r.td,{}),(0,n.jsxs)(r.td,{children:["'manual' | ",(0,n.jsx)(r.a,{href:"/docs/reference/backend-plugin-api.schedulerservicetaskrunner",children:"SchedulerServiceTaskRunner"})]}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," The refresh schedule to use."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.teamtransformer",children:"teamTransformer?"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.teamtransformer",children:"TeamTransformer"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," Optionally include a team transformer for transforming from GitHub teams to Group Entities. By default, groups will be namespaced according to their GitHub org."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.githubmultiorgentityprovideroptions.usertransformer",children:"userTransformer?"})}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/reference/plugin-catalog-backend-module-github.usertransformer",children:"UserTransformer"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.em,{children:"(Optional)"})," Optionally include a user transformer for transforming from GitHub users to User Entities"]})]})]})]})]})}function u(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},675251:(e,r,t)=>{var n=t(667294),i=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,d=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,r,t){var n,o={},c=null,a=null;for(n in void 0!==t&&(c=""+t),void 0!==r.key&&(c=""+r.key),void 0!==r.ref&&(a=r.ref),r)s.call(r,n)&&!l.hasOwnProperty(n)&&(o[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===o[n]&&(o[n]=r[n]);return{$$typeof:i,type:e,key:c,ref:a,props:o,_owner:d.current}}r.Fragment=o,r.jsx=c,r.jsxs=c},785893:(e,r,t)=>{e.exports=t(675251)},511151:(e,r,t)=>{t.d(r,{Z:()=>d,a:()=>s});var n=t(667294);const i={},o=n.createContext(i);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);