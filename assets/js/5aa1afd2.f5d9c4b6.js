/*! For license information please see 5aa1afd2.f5d9c4b6.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[863448],{742869:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>t,metadata:()=>c,toc:()=>p});var i=n(785893),o=n(511151);const t={id:"core-plugin-api.discoveryapi",title:"DiscoveryApi",description:"API reference for DiscoveryApi"},s=void 0,c={id:"reference/core-plugin-api.discoveryapi",title:"DiscoveryApi",description:"API reference for DiscoveryApi",source:"@site/../docs/reference/core-plugin-api.discoveryapi.md",sourceDirName:"reference",slug:"/reference/core-plugin-api.discoveryapi",permalink:"/docs/reference/core-plugin-api.discoveryapi",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/core-plugin-api.discoveryapi.md",tags:[],version:"current",frontMatter:{id:"core-plugin-api.discoveryapi",title:"DiscoveryApi",description:"API reference for DiscoveryApi"}},a={},p=[{value:"Remarks",id:"remarks",level:2}];function d(e){const r={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"/docs/reference/",children:"Home"})," > ",(0,i.jsx)(r.a,{href:"/docs/reference/core-plugin-api",children:(0,i.jsx)(r.code,{children:"@backstage/core-plugin-api"})})," > ",(0,i.jsx)(r.a,{href:"/docs/reference/core-plugin-api.discoveryapi",children:(0,i.jsx)(r.code,{children:"DiscoveryApi"})})]}),"\n",(0,i.jsx)(r.p,{children:"The discovery API is used to provide a mechanism for plugins to discover the endpoint to use to talk to their backend counterpart."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Signature:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"export type DiscoveryApi = {\n    getBaseUrl(pluginId: string): Promise<string>;\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsx)(r.p,{children:"The purpose of the discovery API is to allow for many different deployment setups and routing methods through a central configuration, instead of letting each individual plugin manage that configuration."}),"\n",(0,i.jsx)(r.p,{children:"Implementations of the discovery API can be a simple as a URL pattern using the pluginId, but could also have overrides for individual plugins, or query a separate discovery service."})]})}function l(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},675251:(e,r,n)=>{var i=n(667294),o=Symbol.for("react.element"),t=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,c=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function p(e,r,n){var i,t={},p=null,d=null;for(i in void 0!==n&&(p=""+n),void 0!==r.key&&(p=""+r.key),void 0!==r.ref&&(d=r.ref),r)s.call(r,i)&&!a.hasOwnProperty(i)&&(t[i]=r[i]);if(e&&e.defaultProps)for(i in r=e.defaultProps)void 0===t[i]&&(t[i]=r[i]);return{$$typeof:o,type:e,key:p,ref:d,props:t,_owner:c.current}}r.Fragment=t,r.jsx=p,r.jsxs=p},785893:(e,r,n)=>{e.exports=n(675251)},511151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>s});var i=n(667294);const o={},t=i.createContext(o);function s(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);