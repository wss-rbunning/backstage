/*! For license information please see 3caa426b.9bf6880f.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[318214],{29620:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=o(785893),t=o(511151);const s={id:"plugin-notifications-node.notificationprocessor",title:"NotificationProcessor",description:"API reference for NotificationProcessor"},r=void 0,c={id:"reference/plugin-notifications-node.notificationprocessor",title:"NotificationProcessor",description:"API reference for NotificationProcessor",source:"@site/../docs/reference/plugin-notifications-node.notificationprocessor.md",sourceDirName:"reference",slug:"/reference/plugin-notifications-node.notificationprocessor",permalink:"/docs/reference/plugin-notifications-node.notificationprocessor",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/reference/plugin-notifications-node.notificationprocessor.md",tags:[],version:"current",frontMatter:{id:"plugin-notifications-node.notificationprocessor",title:"NotificationProcessor",description:"API reference for NotificationProcessor"}},a={},d=[{value:"Methods",id:"methods",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/reference/",children:"Home"})," > ",(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node",children:(0,i.jsx)(n.code,{children:"@backstage/plugin-notifications-node"})})," > ",(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node.notificationprocessor",children:(0,i.jsx)(n.code,{children:"NotificationProcessor"})})]}),"\n",(0,i.jsx)(n.p,{children:"Notification processors are used to modify the notification parameters or sending the notifications to external systems."}),"\n",(0,i.jsxs)(n.p,{children:["Notification modules should utilize the ",(0,i.jsx)(n.code,{children:"notificationsProcessingExtensionPoint"})," to add new processors to the system."]}),"\n",(0,i.jsx)(n.p,{children:"Notification processing flow:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"New notification send request is received 2. For all notification processors registered, processOptions function is called to process the notification options 3. Notification recipients are resolved from the options 4. For each recipient, preProcess function is called to pre-process the notification 5. Notification is saved to the database and sent to the Backstage UI 6. For each recipient, postProcess function is called to post-process the notification"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export interface NotificationProcessor \n"})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node.notificationprocessor.getname",children:"getName()"})}),(0,i.jsx)(n.td,{children:"Human-readable name of this processor like Email, Slack, etc."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node.notificationprocessor.getnotificationfilters",children:"getNotificationFilters()?"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"(Optional)"})," notification filters are used to call the processor only in certain conditions"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node.notificationprocessor.postprocess",children:"postProcess(notification, options)?"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"(Optional)"})," Post process notification after sending it to Backstage UI."]}),(0,i.jsx)(n.p,{children:"Can be used to send the notification to external services."}),(0,i.jsx)(n.p,{children:"postProcess functions are called for each notification recipient individually or once for broadcast notification AFTER the notification has been sent to the Backstage UI."})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node.notificationprocessor.preprocess",children:"preProcess(notification, options)?"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"(Optional)"})," Pre-process notification before sending it to Backstage UI."]}),(0,i.jsx)(n.p,{children:"Can be used to send the notification to external services or to decorate the notification with additional information. The notification is saved to database and sent to Backstage UI after all pre-process functions have run. The notification options passed here are already processed by processOptions functionality."}),(0,i.jsx)(n.p,{children:"preProcess functions are called for each notification recipient individually or once for broadcast notification BEFORE the notification has been sent to the Backstage UI."})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/reference/plugin-notifications-node.notificationprocessor.processoptions",children:"processOptions(options)?"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"(Optional)"})," Process the notification options."]}),(0,i.jsx)(n.p,{children:"Can be used to override the default recipient resolving, sending the notification to an external service or modify other notification options necessary."}),(0,i.jsx)(n.p,{children:"processOptions functions are called only once for each notification before the recipient resolving, pre-process, sending and post-process of the notification."})]})]})]})]})]})}function f(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},675251:(e,n,o)=>{var i=o(667294),t=Symbol.for("react.element"),s=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,c=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,o){var i,s={},d=null,l=null;for(i in void 0!==o&&(d=""+o),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(l=n.ref),n)r.call(n,i)&&!a.hasOwnProperty(i)&&(s[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===s[i]&&(s[i]=n[i]);return{$$typeof:t,type:e,key:d,ref:l,props:s,_owner:c.current}}n.Fragment=s,n.jsx=d,n.jsxs=d},785893:(e,n,o)=>{e.exports=o(675251)},511151:(e,n,o)=>{o.d(n,{Z:()=>c,a:()=>r});var i=o(667294);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);