/*! For license information please see 708f9dc5.b56153fc.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[666160],{426124:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=t(785893),r=t(511151);const o={id:"org",title:"GitLab Organizational Data",sidebar_label:"Org Data",description:"Importing users and groups from GitLab into Backstage"},s=void 0,a={id:"integrations/gitlab/org",title:"GitLab Organizational Data",description:"Importing users and groups from GitLab into Backstage",source:"@site/../docs/integrations/gitlab/org.md",sourceDirName:"integrations/gitlab",slug:"/integrations/gitlab/org",permalink:"/docs/integrations/gitlab/org",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/integrations/gitlab/org.md",tags:[],version:"current",frontMatter:{id:"org",title:"GitLab Organizational Data",sidebar_label:"Org Data",description:"Importing users and groups from GitLab into Backstage"},sidebar:"docs",previous:{title:"Discovery",permalink:"/docs/integrations/gitlab/discovery"},next:{title:"Locations",permalink:"/docs/integrations/gitea/locations"}},l={},d=[{value:"Installation",id:"installation",level:2},{value:"Installation with New Backend System",id:"installation-with-new-backend-system",level:3},{value:"Installation with Legacy Backend System",id:"installation-with-legacy-backend-system",level:3},{value:"Installation without Events Support",id:"installation-without-events-support",level:4},{value:"Installation with Events Support",id:"installation-with-events-support",level:4},{value:"Configuration",id:"configuration",level:2},{value:"Groups",id:"groups",level:3},{value:"Users",id:"users",level:3},{value:"Limiting <code>User</code> and <code>Group</code> entity ingestion in the provider",id:"limiting-user-and-group-entity-ingestion-in-the-provider",level:3},{value:"Custom Transformers",id:"custom-transformers",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The Backstage catalog can be set up to ingest organizational data -- users and\ngroups -- directly from GitLab. The result is a hierarchy of\n",(0,i.jsx)(n.a,{href:"/docs/features/software-catalog/descriptor-format#kind-user",children:(0,i.jsx)(n.code,{children:"User"})})," and\n",(0,i.jsx)(n.a,{href:"/docs/features/software-catalog/descriptor-format#kind-group",children:(0,i.jsx)(n.code,{children:"Group"})}),"\nentities that mirrors your org setup."]}),"\n",(0,i.jsxs)(n.p,{children:["This provider can also be configured to ingest GitLab data based on ",(0,i.jsx)(n.a,{href:"https://docs.gitlab.com/ee/administration/system_hooks.html",children:"GitLab System hooks"}),". The events currently accepted are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"group_create"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"group_destroy"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"group_rename"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"user_create"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"user_destroy"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"user_add_to_group"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"user_remove_from_group"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"As this provider is not one of the default providers, you will first need to install the Gitlab provider plugin:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="From your Backstage root directory"',children:"yarn --cwd packages/backend add @backstage/plugin-catalog-backend-module-gitlab @backstage/plugin-catalog-backend-module-gitlab-org\n"})}),"\n",(0,i.jsx)(n.h3,{id:"installation-with-new-backend-system",children:"Installation with New Backend System"}),"\n",(0,i.jsx)(n.p,{children:"Then add the following to your backend initialization:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="packages/backend/src/index.ts',children:"// optional if you want HTTP endpoints to receive external events\n// backend.add(import('@backstage/plugin-events-backend/alpha'));\n// optional if you want to use AWS SQS instead of HTTP endpoints to receive external events\n// backend.add(import('@backstage/plugin-events-backend-module-aws-sqs/alpha'));\n// optional - event router for gitlab. See.: https://github.com/backstage/backstage/blob/master/plugins/events-backend-module-gitlab/README.md\n// backend.add(eventsModuleGitlabEventRouter());\n// optional - token validator for the gitlab topic\n// backend.add(eventsModuleGitlabWebhook());\nbackend.add(import('@backstage/plugin-catalog-backend-module-gitlab-org'));\n"})}),"\n",(0,i.jsx)(n.p,{children:"You need to decide how you want to receive events from external sources like"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/events-backend/README.md#configuration",children:"via HTTP endpoint"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/tree/master/plugins/events-backend-module-aws-sqs/README.md",children:"via an AWS SQS queue"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Further documentation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.gitlab.com/ee/administration/system_hooks.html",children:"GitLab System hooks"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/tree/master/plugins/events-backend/README.md",children:"Events Plugin"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/events-backend-module-gitlab/README.md",children:"GitLab Module for the Events Plugin"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"installation-with-legacy-backend-system",children:"Installation with Legacy Backend System"}),"\n",(0,i.jsx)(n.h4,{id:"installation-without-events-support",children:"Installation without Events Support"}),"\n",(0,i.jsxs)(n.p,{children:["Add the plugin to the plugin catalog ",(0,i.jsx)(n.code,{children:"packages/backend/src/plugins/catalog.ts"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"/* packages/backend/src/plugins/catalog.ts */\n/* highlight-add-next-line */\nimport { GitlabOrgDiscoveryEntityProvider } from '@backstage/plugin-catalog-backend-module-gitlab';\n\nexport default async function createPlugin(\n  env: PluginEnvironment,\n): Promise<Router> {\n  const builder = await CatalogBuilder.create(env);\n  /** ... other processors and/or providers ... */\n  /* highlight-add-start */\n  builder.addEntityProvider(\n    ...GitlabOrgDiscoveryEntityProvider.fromConfig(env.config, {\n      logger: env.logger,\n      // optional: alternatively, use scheduler with schedule defined in app-config.yaml\n      schedule: env.scheduler.createScheduledTaskRunner({\n        frequency: { minutes: 30 },\n        timeout: { minutes: 3 },\n      }),\n      // optional: alternatively, use schedule\n      scheduler: env.scheduler,\n    }),\n  );\n  /* highlight-add-end */\n  // ..\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"installation-with-events-support",children:"Installation with Events Support"}),"\n",(0,i.jsx)(n.p,{children:"Please follow the installation instructions at"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/tree/master/plugins/events-backend/README.md",children:"Events Plugin"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/events-backend-module-gitlab/README.md",children:"GitLab Module for the Events Plugin"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Additionally, you need to decide how you want to receive events from external sources like"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/tree/master/plugins/events-backend/README.md",children:"via HTTP endpoint"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/backstage/backstage/tree/master/plugins/events-backend-module-aws-sqs/README.md",children:"via an AWS SQS queue"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Set up your provider"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="packages/backend/src/plugins/catalog.ts"',children:"import { CatalogBuilder } from '@backstage/plugin-catalog-backend';\n/* highlight-add-next-line */\nimport { GitlabOrgDiscoveryEntityProvider } from '@backstage/plugin-catalog-backend-module-gitlab';\nimport { ScaffolderEntitiesProcessor } from '@backstage/plugin-scaffolder-backend';\nimport { Router } from 'express';\nimport { PluginEnvironment } from '../types';\n\nexport default async function createPlugin(\n  env: PluginEnvironment,\n): Promise<Router> {\n  const builder = await CatalogBuilder.create(env);\n  builder.addProcessor(new ScaffolderEntitiesProcessor());\n  /* highlight-add-start */\n  const gitlabOrgProvider = GitlabOrgDiscoveryEntityProvider.fromConfig(\n    env.config,\n    {\n      logger: env.logger,\n      // optional: alternatively, use scheduler with schedule defined in app-config.yaml\n      schedule: env.scheduler.createScheduledTaskRunner({\n        frequency: { minutes: 30 },\n        timeout: { minutes: 3 },\n      }),\n      // optional: alternatively, use schedule\n      scheduler: env.scheduler,\n      events: env.events,\n    },\n  );\n  builder.addEntityProvider(gitlabOrgProvider);\n  /* highlight-add-end */\n  const { processingEngine, router } = await builder.build();\n  await processingEngine.start();\n  return router;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["To use the entity provider, you'll need a ",(0,i.jsx)(n.a,{href:"https://backstage.io/docs/integrations/gitlab/locations",children:"Gitlab integration set up"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"integrations:\n  gitlab:\n    - host: gitlab.com\n      token: ${GITLAB_TOKEN}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will query all users and groups from your GitLab instance. Depending on the\namount of data, this can take significant time and resources."}),"\n",(0,i.jsxs)(n.p,{children:["The token used must have the ",(0,i.jsx)(n.code,{children:"read_api"})," scope, and the Users and Groups fetched\nwill be those visible to the account which provisioned the token."]}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"note",children:(0,i.jsxs)(n.p,{children:["If you are using the New Backend System, the ",(0,i.jsx)(n.code,{children:"schedule"})," has to be setup in the config, as shown below."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'catalog:\n  providers:\n    gitlab:\n      yourProviderId:\n        host: gitlab.com\n        orgEnabled: true\n        group: org/teams # Required for gitlab.com when `orgEnabled: true`. Optional for self managed. Must not end with slash. Accepts only groups under the provided path (which will be stripped)\n        allowInherited: true # Allow groups to be ingested even if there are no direct members.\n        groupPattern: \'[\\s\\S]*\' # Optional. Filters found groups based on provided pattern. Defaults to `[\\s\\S]*`, which means to not filter anything\n        schedule: # Same options as in SchedulerServiceTaskScheduleDefinition. Optional for the Legacy Backend System.\n          # supports cron, ISO duration, "human duration" as used in code\n          frequency: { minutes: 30 }\n          # supports ISO duration, "human duration" as used in code\n          timeout: { minutes: 3 }\n'})}),"\n",(0,i.jsx)(n.h3,{id:"groups",children:"Groups"}),"\n",(0,i.jsxs)(n.p,{children:["When the ",(0,i.jsx)(n.code,{children:"group"})," parameter is provided, the corresponding path prefix will be\nstripped out from each matching group when computing the unique entity name.\ne.g. If ",(0,i.jsx)(n.code,{children:"group"})," is ",(0,i.jsx)(n.code,{children:"org/teams"}),", the name for ",(0,i.jsx)(n.code,{children:"org/teams/avengers/gotg"})," will be\n",(0,i.jsx)(n.code,{children:"avengers-gotg"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["For gitlab.com, when ",(0,i.jsx)(n.code,{children:"orgEnabled: true"}),", the ",(0,i.jsx)(n.code,{children:"group"})," parameter is required in\norder to limit the ingestion to a group within your organisation. ",(0,i.jsx)(n.code,{children:"Group"}),"\nentities will only be ingested for the configured group, or its descendant groups,\nbut not any ancestor groups higher than the configured group path. Only groups\nwhich contain members will be ingested."]}),"\n",(0,i.jsx)(n.h3,{id:"users",children:"Users"}),"\n",(0,i.jsxs)(n.p,{children:["For self hosted, all ",(0,i.jsx)(n.code,{children:"User"})," entities are ingested from the entire instance by default."]}),"\n",(0,i.jsxs)(n.p,{children:["For gitlab.com ",(0,i.jsx)(n.code,{children:"User"})," entities for users who have ",(0,i.jsx)(n.a,{href:"https://docs.gitlab.com/ee/user/project/members/index.html#membership-types",children:"direct or inherited membership"}),"\nof the top-level group for the configured group path will be ingested."]}),"\n",(0,i.jsxs)(n.p,{children:["In both cases (SaaS & self hosted), you can limit the ingested users to users directly assigned to the group defined in your ",(0,i.jsx)(n.code,{children:"app-config.yaml"})," by setting the configuration key ",(0,i.jsx)(n.code,{children:"restrictUsersToGroup: true"}),". This is especially useful when you have a large user base that you don't want to import by default."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"catalog:\n  providers:\n    gitlab:\n      yourProviderId:\n        host: gitlab.com ## Could also be self hosted.\n        orgEnabled: true\n        group: org/teams # Required for gitlab.com when `orgEnabled: true`. Optional for self managed. Must not end with slash. Accepts only groups under the provided path (which will be stripped)\n        restrictUsersToGroup: true # Backstage will ingest only users directly assigned to org/teams.\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"limiting-user-and-group-entity-ingestion-in-the-provider",children:["Limiting ",(0,i.jsx)(n.code,{children:"User"})," and ",(0,i.jsx)(n.code,{children:"Group"})," entity ingestion in the provider"]}),"\n",(0,i.jsxs)(n.p,{children:["Optionally, you can limit the entity types ingested by the provider when using\n",(0,i.jsx)(n.code,{children:"orgEnabled: true"})," with the following ",(0,i.jsx)(n.code,{children:"rules"})," configuration to limit it to only\n",(0,i.jsx)(n.code,{children:"User"})," and ",(0,i.jsx)(n.code,{children:"Group"})," entities."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"catalog:\n  providers:\n    gitlab:\n      yourOrgDataProviderId:\n        host: gitlab.com\n        orgEnabled: true\n        group: org/teams\n        rules:\n          - allow: [Group, User]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"custom-transformers",children:"Custom Transformers"}),"\n",(0,i.jsx)(n.p,{children:"You can inject your own transformation logic to help map GitLab API responses\ninto Backstage entities. You can do this on the user and group requests to\nenable you to do further processing or updates to these entities."}),"\n",(0,i.jsxs)(n.p,{children:["To enable this you pass a function into the ",(0,i.jsx)(n.code,{children:"GitlabOrgDiscoveryEntityProvider"}),". You can\npass a ",(0,i.jsx)(n.code,{children:"UserTransformer"}),", a ",(0,i.jsx)(n.code,{children:"GroupEntitiesTransformer"})," or a ",(0,i.jsx)(n.code,{children:"GroupNameTransformer"})," (or all of them)). The function is invoked\nfor each item (user or group) that is returned from the API."]}),"\n",(0,i.jsxs)(n.p,{children:["The example below uses the groupNameTransformer option to change the metadata.name property of the Backstage Group Entity. Instead of populating it with the usual ",(0,i.jsx)(n.code,{children:"group.full_path"})," data that comes from GitLab, it uses the ",(0,i.jsx)(n.code,{children:"group.id"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { loggerToWinstonLogger } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { catalogProcessingExtensionPoint } from '@backstage/plugin-catalog-node/alpha';\nimport { eventsServiceRef } from '@backstage/plugin-events-node';\nimport {\n  GitlabOrgDiscoveryEntityProvider,\n  /* highlight-add-next-line */\n  GroupNameTransformerOptions,\n} from '@backstage/plugin-catalog-backend-module-gitlab';\n\n/* highlight-add-start */\nfunction customGroupNameTransformer(\n  options: GroupNameTransformerOptions,\n): string {\n  return `${options.group.id}`;\n}\n/* highlight-add-end */\n\n/**\n * Registers the GitlabDiscoveryEntityProvider with the catalog processing extension point.\n *\n * @alpha\n */\nexport const catalogModuleGitlabOrgDiscoveryEntityProvider =\n  createBackendModule({\n    pluginId: 'catalog',\n    moduleId: 'gitlabOrgDiscoveryEntityProvider',\n    register(env) {\n      env.registerInit({\n        deps: {\n          config: coreServices.rootConfig,\n          catalog: catalogProcessingExtensionPoint,\n          logger: coreServices.logger,\n          scheduler: coreServices.scheduler,\n          events: eventsServiceRef,\n        },\n        async init({ config, catalog, logger, scheduler, events }) {\n          const gitlabOrgDiscoveryEntityProvider =\n            GitlabOrgDiscoveryEntityProvider.fromConfig(config, {\n              /* highlight-add-next-line */\n              groupNameTransformer: customGroupNameTransformer,\n              logger: loggerToWinstonLogger(logger),\n              events,\n              scheduler,\n            });\n          catalog.addEntityProvider(gitlabOrgDiscoveryEntityProvider);\n        },\n      });\n    },\n  });\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE"}),": If any groups that are being ingested are empty groups (i.e. do not\ncontain any projects) and the user which provisioned the token is shared with a\nhigher level group via ",(0,i.jsx)(n.a,{href:"https://docs.gitlab.com/ee/user/group/manage.html#share-a-group-with-another-group",children:"group sharing"}),"\nand you don't see the expected number of ",(0,i.jsx)(n.code,{children:"Group"})," entities in the catalog you may\nbe hitting this ",(0,i.jsx)(n.a,{href:"https://gitlab.com/gitlab-org/gitlab/-/issues/267996",children:"Gitlab issue"}),"."]})]})}function g(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},675251:(e,n,t)=>{var i=t(667294),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,t){var i,o={},d=null,c=null;for(i in void 0!==t&&(d=""+t),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(c=n.ref),n)s.call(n,i)&&!l.hasOwnProperty(i)&&(o[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===o[i]&&(o[i]=n[i]);return{$$typeof:r,type:e,key:d,ref:c,props:o,_owner:a.current}}n.Fragment=o,n.jsx=d,n.jsxs=d},785893:(e,n,t)=>{e.exports=t(675251)},511151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var i=t(667294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);